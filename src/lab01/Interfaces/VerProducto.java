/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab01.Interfaces;
import java.awt.Point;
import lab01.Clases.DataProducto;
import lab01.Clases.DataRestaurante;
import lab01.Handlers.Fabrica;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import lab01.Clases.DataIndividual;
import lab01.Clases.DataPromocional;
import lab01.Clases.Producto;


/**
 *
 * @author martin
 */
public class VerProducto extends javax.swing.JInternalFrame {

    /**
     * Creates new form VerProducto
     */
    ICtrlUsuario ICU;
    public VerProducto() {
        initComponents();
        Fabrica fabrica = Fabrica.getInstance();
        ICU = fabrica.getICtrlUsuario();
        modelo = (DefaultTableModel)jTabla.getModel();
        cargarTabla();
    }
    DefaultTableModel modelo;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccione un producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("URW Gothic L", 1, 14))); // NOI18N

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Restaurante"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTablaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTabla);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaMousePressed
        // TODO add your handling code here:
        String nick = null;
        String nomProd = null;
        DataRestaurante res = null;
        DataProducto prod;
        Map colProd = null;
        JTable tab = (JTable)evt.getSource();
        Point point = evt.getPoint();
        int fila = tab.rowAtPoint(point);
        if(evt.getClickCount() == 1){
            nomProd = jTabla.getValueAt(fila,0).toString();
            nick = jTabla.getValueAt(fila, 1).toString();
        }
        try{
            res = ICU.getRestauranteByNickname(nick);
             
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "El restaurante no est√° en el sistema","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        Iterator dprods = res.getColProducto().entrySet().iterator();
        while(dprods.hasNext()){
            Map.Entry dprod = (Map.Entry) dprods.next();
            if(dprod.getValue() instanceof DataIndividual){
                DataIndividual di = (DataIndividual)dprod.getValue();
                if(di.getDataNombre().equals(nomProd)){
                    VerInfoProd verinfop = new VerInfoProd(di, res);
                    verinfop.setVisible(true);
                }
            }
            if(dprod.getValue() instanceof DataPromocional){
                DataPromocional dp = (DataPromocional)dprod.getValue();
                if(dp.getDataNombre().equals(nomProd)){
                    VerInfoProd verinfop = new VerInfoProd(dp, res);
                    verinfop.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_jTablaMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
//
//      try {
//           int fila = jTabla.getSelectedRow();
//           String dato = jTabla.getModel().getValueAt(fila, 0).toString();
//           JOptionPane.showMessageDialog(null, dato);
//           
//           
//       }catch(Exception e){
//           JOptionPane.showMessageDialog(null, "Error" +e.getMessage());
//       }
    
     private void cargarTabla(){
        Iterator it = ICU.listaDataRestaurantes().entrySet().iterator();
        String lista[]=new String[2];
        while(it.hasNext()){
            Map.Entry map = (Map.Entry) it.next();
            DataRestaurante dr = (DataRestaurante) map.getValue();
            lista[1]=dr.getNickname();
            Map colProd = dr.getColProducto();
            Iterator it2 = colProd.entrySet().iterator();
            while(it2.hasNext()){
                Map.Entry mapcol = (Map.Entry) it2.next();
                if(mapcol.getValue() instanceof DataIndividual){
                    DataIndividual di = (DataIndividual) mapcol.getValue();
                    lista[0] = di.getDataNombre();
                }
                if(mapcol.getValue() instanceof DataPromocional){
                    DataPromocional dp = (DataPromocional) mapcol.getValue();
                    lista[0] = dp.getDataNombre();
                }
                modelo.insertRow((int)jTabla.getRowCount(), lista);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    // End of variables declaration//GEN-END:variables
}
